/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';



export interface IControlInfoData {
    requestClosingDateTime?: boolean;
    suggestedClosingDateTime?: Date;
    completed?: boolean;
}


export class ControlInfoData extends BaseModel implements IControlInfoData  {

    static REQUEST_CLOSING_DATE_TIME_FIELD_NAME = 'requestClosingDateTime';
    static SUGGESTED_CLOSING_DATE_TIME_FIELD_NAME = 'suggestedClosingDateTime';
    static COMPLETED_FIELD_NAME = 'completed';

    requestClosingDateTime: boolean;
    suggestedClosingDateTime: Date;
    completed: boolean;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
     * @useFormGroupValuesToModel if true use formValues
    */
    constructor(values?: any, useFormGroupValuesToModel = false) {
        super();

        if (values) {
            this.setValues(values, useFormGroupValuesToModel);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, useFormGroupValuesToModel = false): void {
        if (values) {
            const rawValues = this.getValuesToUse(values, useFormGroupValuesToModel);
            this.requestClosingDateTime = rawValues.requestClosingDateTime;
            this.suggestedClosingDateTime = rawValues.suggestedClosingDateTime;
            this.completed = rawValues.completed;
            // set values in model properties for added formControls
            super.setValuesInAddedPropertiesOfAttachedFormControls(values, useFormGroupValuesToModel);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                requestClosingDateTime: new FormControl(this.requestClosingDateTime),
                suggestedClosingDateTime: new FormControl(this.suggestedClosingDateTime),
                completed: new FormControl(this.completed),
            });
        }
        return this._formGroup;
    }

    /**
     * set the FormGroup values to the model values.
    */
    setFormGroupValues() {
        this.$formGroup.controls[ControlInfoData.REQUEST_CLOSING_DATE_TIME_FIELD_NAME].setValue(this.requestClosingDateTime);
        this.$formGroup.controls[ControlInfoData.SUGGESTED_CLOSING_DATE_TIME_FIELD_NAME].setValue(this.suggestedClosingDateTime);
        this.$formGroup.controls[ControlInfoData.COMPLETED_FIELD_NAME].setValue(this.completed);
        // set formValues in added formControls
        super.setFormGroupValuesInAddedFormControls();
    }
}

